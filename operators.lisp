(in-package :bytecurry.mexpr)

(defop or 10)
(defop and 20)
(defop \| 30 logior)
(defop logior 30)
(defop ^ 40 logxor)
(defop logxor 40)
(defop & 50 logand)
(defop logand 50)
(defop = 60)
(defop /= 60)
(defop < 70)
(defop > 70)
(defop >= 70)
(defop <= 70)
(defop ash 80)
(defop << 80 ash)
(defop >> 80 (lambda (a b) (ash a (- b))))
(defop + 90)
(defop - 90)
(defop * 100)
(defop / 100)
(defop mod 100)
(defop rem 100)
(defop % 100 mod)
(defop expt 110)
(defop ** 110 expt)
